package fiskfille.tf.client.model.transformer;

import fiskfille.tf.TransformerManager;
import fiskfille.tf.client.model.tools.AnimationModifier;
import fiskfille.tf.client.model.tools.ModelRendererTF;
import fiskfille.tf.client.model.transformer.vehicle.ModelPurgeVehicle;
import fiskfille.tf.common.helper.ModelOffset;
import fiskfille.tf.common.helper.TFHelper;
import fiskfille.tf.common.helper.TFModelHelper;
import fiskfille.tf.common.helper.TFRenderHelper;
import fiskfille.tf.common.transformer.TransformerSkystrike;
import fiskfille.tf.common.transformer.base.Transformer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.inventory.EntityEquipmentSlot;
import net.minecraft.util.math.MathHelper;

import static fiskfille.tf.common.data.TFPredicates.isBacking;

public class ModelPurge extends ModelTransformerBase
{
    public ModelRendererTF waist;
    public ModelRendererTF torsoconnector;
    public ModelRendererTF upperLegR;
    public ModelRendererTF upperLegL;
    public ModelRendererTF waistL1;
    public ModelRendererTF waistR1;
    public ModelRendererTF crotch1;
    public ModelRendererTF waistL3;
    public ModelRendererTF waistR3;
    public ModelRendererTF torsobase;
    public ModelRendererTF stomach1;
    public ModelRendererTF bodyparts1;
    public ModelRendererTF bodyparts2;
    public ModelRendererTF bodyparts3;
    public ModelRendererTF bodyparts4;
    public ModelRendererTF trackbase1;
    public ModelRendererTF trackconnectorR1;
    public ModelRendererTF trackconnectorL1;
    public ModelRendererTF torsobaseL;
    public ModelRendererTF torsobaseR;
    public ModelRendererTF turretconnector;
    public ModelRendererTF neck1;
    public ModelRendererTF chestplateL1;
    public ModelRendererTF chestplateR1;
    public ModelRendererTF chestplate1;
    public ModelRendererTF upperArmL;
    public ModelRendererTF shoulderL1;
    public ModelRendererTF lowerArmL;
    public ModelRendererTF upperarmL2;
    public ModelRendererTF fistL;
    public ModelRendererTF lowerarmL2;
    public ModelRendererTF lowerarmL3;
    public ModelRendererTF lowerarmL4;
    public ModelRendererTF lowerarmL5;
    public ModelRendererTF shoulderL2;
    public ModelRendererTF shoulderL3;
    public ModelRendererTF shoulderL8;
    public ModelRendererTF shoulderL4;
    public ModelRendererTF shoulderL6;
    public ModelRendererTF shoulderL5;
    public ModelRendererTF shoulderL7;
    public ModelRendererTF upperArmR;
    public ModelRendererTF shoulderR1;
    public ModelRendererTF lowerArmR;
    public ModelRendererTF upperarmR2;
    public ModelRendererTF fistR;
    public ModelRendererTF lowerarmR2;
    public ModelRendererTF lowerarmR3;
    public ModelRendererTF lowerarmR5;
    public ModelRendererTF lowerarmR4;
    public ModelRendererTF shoulderR2;
    public ModelRendererTF shoulderR3;
    public ModelRendererTF shoulderR8;
    public ModelRendererTF shoulderR4;
    public ModelRendererTF shoulderR6;
    public ModelRendererTF shoulderR5;
    public ModelRendererTF shoulderR7;
    public ModelRendererTF turretbase;
    public ModelRendererTF turret1;
    public ModelRendererTF turret5;
    public ModelRendererTF turret11;
    public ModelRendererTF turret12;
    public ModelRendererTF turret2;
    public ModelRendererTF turret3;
    public ModelRendererTF turret4;
    public ModelRendererTF barrelbase1;
    public ModelRendererTF barrelbase2;
    public ModelRendererTF barrelbase3;
    public ModelRendererTF barrelbase4;
    public ModelRendererTF barrelbase5;
    public ModelRendererTF barrel1;
    public ModelRendererTF barrel2;
    public ModelRendererTF turret6;
    public ModelRendererTF turret7;
    public ModelRendererTF turret8;
    public ModelRendererTF turret9;
    public ModelRendererTF turret10;
    public ModelRendererTF headbase;
    public ModelRendererTF headback1;
    public ModelRendererTF headL1;
    public ModelRendererTF headR1;
    public ModelRendererTF headtop1;
    public ModelRendererTF headchin1;
    public ModelRendererTF headL2;
    public ModelRendererTF headR2;
    public ModelRendererTF headcrest1;
    public ModelRendererTF headcrest2;
    public ModelRendererTF headcrest3;
    public ModelRendererTF headcrest4;
    public ModelRendererTF chestplateL2;
    public ModelRendererTF chestplateL3;
    public ModelRendererTF chestplateR2;
    public ModelRendererTF chestplateR3;
    public ModelRendererTF trackconnectorR2;
    public ModelRendererTF trackconnectorR3;
    public ModelRendererTF trackconnectorR4;
    public ModelRendererTF wheelR3;
    public ModelRendererTF wheelR4;
    public ModelRendererTF wheelR5;
    public ModelRendererTF trackR1;
    public ModelRendererTF trackR6;
    public ModelRendererTF trackconnectorR5;
    public ModelRendererTF wheelR2;
    public ModelRendererTF wheelR1;
    public ModelRendererTF trackR2;
    public ModelRendererTF trackR5;
    public ModelRendererTF trackR3;
    public ModelRendererTF trackR4;
    public ModelRendererTF trackR7;
    public ModelRendererTF trackR8;
    public ModelRendererTF trackconnectorL2;
    public ModelRendererTF trackconnectorL3;
    public ModelRendererTF trackconnectorL4;
    public ModelRendererTF wheelL3;
    public ModelRendererTF wheelL4;
    public ModelRendererTF wheelL5;
    public ModelRendererTF trackL1;
    public ModelRendererTF trackL5;
    public ModelRendererTF trackcnnectorL5;
    public ModelRendererTF wheelL2;
    public ModelRendererTF wheelL1;
    public ModelRendererTF trackL2;
    public ModelRendererTF trackL3;
    public ModelRendererTF trackL4;
    public ModelRendererTF trackL6;
    public ModelRendererTF trackL8;
    public ModelRendererTF trackL7;
    public ModelRendererTF lowerlegR1;
    public ModelRendererTF upperlegR2;
    public ModelRendererTF feetbaseR1;
    public ModelRendererTF lowerlegR2;
    public ModelRendererTF feetR2;
    public ModelRendererTF feetR5;
    public ModelRendererTF feetR3;
    public ModelRendererTF feetR4;
    public ModelRendererTF lowerlegR3;
    public ModelRendererTF lowerlegR8;
    public ModelRendererTF lowerlegR10;
    public ModelRendererTF lowerlegR11;
    public ModelRendererTF lowerlegR13;
    public ModelRendererTF lowerlegR4;
    public ModelRendererTF lowerlegR5;
    public ModelRendererTF lowerlegR6;
    public ModelRendererTF lowerlegR7;
    public ModelRendererTF lowerlegR9;
    public ModelRendererTF lowerlegR12;
    public ModelRendererTF lowerlegL1;
    public ModelRendererTF upperlegL2;
    public ModelRendererTF feetbaseL1;
    public ModelRendererTF lowerlegL2;
    public ModelRendererTF feetL2;
    public ModelRendererTF feetL5;
    public ModelRendererTF feetL3;
    public ModelRendererTF feetL4;
    public ModelRendererTF lowerlegL3;
    public ModelRendererTF lowerlegL8;
    public ModelRendererTF lowerlegL10;
    public ModelRendererTF lowerlegL11;
    public ModelRendererTF lowerlegL13;
    public ModelRendererTF lowerlegL4;
    public ModelRendererTF lowerlegL5;
    public ModelRendererTF lowerlegL6;
    public ModelRendererTF lowerlegL7;
    public ModelRendererTF lowerlegL9;
    public ModelRendererTF lowerlegL12;
    public ModelRendererTF waistL2;
    public ModelRendererTF skirtL1;
    public ModelRendererTF skirtL2;
    public ModelRendererTF waistR2;
    public ModelRendererTF skirtR1;
    public ModelRendererTF skirtR2;
    public ModelRendererTF crotch2;
    public ModelRendererTF crotch3;
    public ModelRendererTF boxL1;
    public ModelRendererTF boxL2;
    public ModelRendererTF boxL3;
    public ModelRendererTF boxR1;
    public ModelRendererTF boxR2;
    public ModelRendererTF boxR3;

    public ModelPurge()
    {
        super(1, 0.8F, new AnimationModifier(AnimationModifier.Type.DEGREE, isBacking(), 0.5F));

        this.textureWidth = 128;
        this.textureHeight = 128;
        this.upperarmR2 = new ModelRendererTF(this, 27, 119);
        this.upperarmR2.mirror = true;
        this.upperarmR2.setRotationPoint(0, -1, -0.5F);
        this.upperarmR2.addBox(-1, 0, 0, 1, 5, 1, 0);
        this.wheelR2 = new ModelRendererTF(this, 11, 96);
        this.wheelR2.mirror = true;
        this.wheelR2.setRotationPoint(0.5F, -1.5F, 0);
        this.wheelR2.addBox(-1, -1, -1.5F, 2, 2, 2, 0);
        this.lowerArmL = new ModelRendererTF(this, 9, 114);
        this.lowerArmL.setRotationPoint(-0.1F, 4.6F, -0.2F);
        this.lowerArmL.addBox(-0.9F, -1, -1, 2, 5, 3, 0);
        this.setRotateAngle(this.lowerArmL, -0.2617993877991494F, 0.08726646259971647F, 0.08726646259971647F);
        this.lowerlegL1 = new ModelRendererTF(this, 87, 60);
        this.lowerlegL1.mirror = true;
        this.lowerlegL1.setRotationPoint(0, 4.6F, -0.8F);
        this.lowerlegL1.addBox(-1, -0.3F, 0, 2, 6, 3, 0);
        this.setRotateAngle(this.lowerlegL1, 0.17453292519943295F, 0, 0.08726646259971647F);
        this.feetbaseL1 = new ModelRendererTF(this, 89, 70);
        this.feetbaseL1.mirror = true;
        this.feetbaseL1.setRotationPoint(0.2F, 6, 1);
        this.feetbaseL1.addBox(-1, -1, -1.5F, 2, 2, 3, 0);
        this.setRotateAngle(this.feetbaseL1, -0.08726646259971647F, -0.08726646259971647F, 0);
        this.trackL4 = new ModelRendererTF(this, 8, 109);
        this.trackL4.setRotationPoint(-2.25F, -3.25F, 0);
        this.trackL4.addBox(0, 0, 0, 3, 1, 3, 0);
        this.setRotateAngle(this.trackL4, 0, 0.017453292519943295F, 0);
        this.skirtL1 = new ModelRendererTF(this, 80, 50);
        this.skirtL1.setRotationPoint(1.5F, 0.2F, -0.5F);
        this.skirtL1.addBox(0, 0, 0, 1, 6, 3, 0);
        this.setRotateAngle(this.skirtL1, 0, -0.05235987755982988F, -0.10471975511965977F);
        this.skirtL2 = new ModelRendererTF(this, 90, 55);
        this.skirtL2.setRotationPoint(0, 3, 3);
        this.skirtL2.addBox(0, 0, 0, 1, 3, 1, 0);
        this.trackR7 = new ModelRendererTF(this, 9, 100);
        this.trackR7.setRotationPoint(-1, 0, 0);
        this.trackR7.addBox(0, -3, 0, 1, 3, 3, 0);
        this.setRotateAngle(this.trackR7, 0, 0, 0.5235987755982988F);
        this.turretbase = new ModelRendererTF(this, 16, 77);
        this.turretbase.setRotationPoint(0, 1, 1);
        this.turretbase.addBox(-3, -1, 0, 6, 3, 3, 0);
        this.feetR2 = new ModelRendererTF(this, 87, 76);
        this.feetR2.setRotationPoint(-1.5F, 0, -2.5F);
        this.feetR2.addBox(0, 0, 3, 3, 2, 2, 0);
        this.crotch3 = new ModelRendererTF(this, 71, 78);
        this.crotch3.setRotationPoint(0, 0, 0);
        this.crotch3.addBox(0, -2, 0, 2, 2, 1, 0);
        this.setRotateAngle(this.crotch3, -0.17453292519943295F, 0, 0);
        this.shoulderL7 = new ModelRendererTF(this, 24, 64);
        this.shoulderL7.setRotationPoint(0.5F, 0, 0);
        this.shoulderL7.addBox(0, 0, -1, 2, 1, 1, 0);
        this.setRotateAngle(this.shoulderL7, 0.3490658503988659F, 0, 0);
        this.barrel1 = new ModelRendererTF(this, 40, 87);
        this.barrel1.setRotationPoint(0, -3.4F, 0);
        this.barrel1.addBox(-0.5F, 0, -0.5F, 1, 8, 1, 0);
        this.shoulderR4 = new ModelRendererTF(this, 34, 53);
        this.shoulderR4.mirror = true;
        this.shoulderR4.setRotationPoint(-2, 1, 0);
        this.shoulderR4.addBox(-1, 0, 0, 1, 4, 5, 0);
        this.turret10 = new ModelRendererTF(this, 27, 104);
        this.turret10.setRotationPoint(-2, 0, 0);
        this.turret10.addBox(-1, 0, 0, 1, 2, 2, 0);
        this.setRotateAngle(this.turret10, 0, 0.017453292519943295F, -0.2617993877991494F);
        this.headbase = new ModelRendererTF(this, 3, 52);
        this.headbase.setRotationPoint(0, -0.5F, 0);
        this.headbase.addBox(-1.5F, -3, -1.5F, 3, 3, 3, 0);
        this.lowerlegR7 = new ModelRendererTF(this, 94, 85);
        this.lowerlegR7.setRotationPoint(0, 2, -0.4F);
        this.lowerlegR7.addBox(-2, 0, -2, 2, 2, 2, 0);
        this.setRotateAngle(this.lowerlegR7, -0.17453292519943295F, -0.017453292519943295F, 0);
        this.headchin1 = new ModelRendererTF(this, 10, 77);
        this.headchin1.setRotationPoint(-1, -0.9F, -1.6F);
        this.headchin1.addBox(0, 0, 0, 2, 1, 1, 0);
        this.setRotateAngle(this.headchin1, -0.17453292519943295F, 0, 0);
        this.boxR2 = new ModelRendererTF(this, 2, 82);
        this.boxR2.setRotationPoint(0, -0.9F, 0.2F);
        this.boxR2.addBox(-3, 0, 0, 3, 1, 2, 0);
        this.setRotateAngle(this.boxR2, -0.32637657012293964F, 0, 0);
        this.trackL6 = new ModelRendererTF(this, 9, 100);
        this.trackL6.mirror = true;
        this.trackL6.setRotationPoint(1, 0, 0);
        this.trackL6.addBox(-1, -3, 0, 1, 3, 3, 0);
        this.setRotateAngle(this.trackL6, 0, 0, -0.5235987755982988F);
        this.torsobaseL = new ModelRendererTF(this, 52, 58);
        this.torsobaseL.setRotationPoint(2.5F, -1, 0);
        this.torsobaseL.addBox(0, -3, -1.5F, 1, 3, 3, 0);
        this.trackconnectorR5 = new ModelRendererTF(this, 20, 96);
        this.trackconnectorR5.mirror = true;
        this.trackconnectorR5.setRotationPoint(1, -3, 0);
        this.trackconnectorR5.addBox(-1, -2, 0, 1, 2, 1, 0);
        this.setRotateAngle(this.trackconnectorR5, -0.017453292519943295F, 0, -0.5235987755982988F);
        this.chestplate1 = new ModelRendererTF(this, 54, 65);
        this.chestplate1.setRotationPoint(-1, -2.3F, -3);
        this.chestplate1.addBox(0, 0, 0, 2, 2, 2, 0);
        this.setRotateAngle(this.chestplate1, 0.3141592653589793F, 0, 0);
        this.lowerlegR11 = new ModelRendererTF(this, 69, 82);
        this.lowerlegR11.setRotationPoint(-0.5F, 2.5F, -0.5F);
        this.lowerlegR11.addBox(-2, 0, 0, 2, 3, 1, 0);
        this.feetL3 = new ModelRendererTF(this, 90, 81);
        this.feetL3.mirror = true;
        this.feetL3.setRotationPoint(0.5F, 1.1F, -1.4F);
        this.feetL3.addBox(0, 0, 0, 2, 1, 3, 0);
        this.setRotateAngle(this.feetL3, 0.41887902047863906F, 0, 0.017453292519943295F);
        this.skirtR2 = new ModelRendererTF(this, 90, 55);
        this.skirtR2.mirror = true;
        this.skirtR2.setRotationPoint(0, 3, 3);
        this.skirtR2.addBox(-1, 0, 0, 1, 3, 1, 0);
        this.torsobaseR = new ModelRendererTF(this, 52, 58);
        this.torsobaseR.mirror = true;
        this.torsobaseR.setRotationPoint(-2.5F, -1, 0);
        this.torsobaseR.addBox(-1, -3, -1.5F, 1, 3, 3, 0);
        this.feetbaseR1 = new ModelRendererTF(this, 89, 70);
        this.feetbaseR1.setRotationPoint(-0.2F, 6, 1);
        this.feetbaseR1.addBox(-1, -1, -1.5F, 2, 2, 3, 0);
        this.setRotateAngle(this.feetbaseR1, -0.08726646259971647F, 0.08726646259971647F, 0);
        this.lowerlegL3 = new ModelRendererTF(this, 80, 88);
        this.lowerlegL3.mirror = true;
        this.lowerlegL3.setRotationPoint(2, 1, 1);
        this.lowerlegL3.addBox(0, 0, 0, 1, 6, 3, 0);
        this.setRotateAngle(this.lowerlegL3, -0.19198621771937624F, 0.017453292519943295F, 0);
        this.upperLegR = new ModelRendererTF(this, 80, 68);
        this.upperLegR.setRotationPoint(-2, 2, 0);
        this.upperLegR.addBox(-1, -1.5F, -1, 2, 6, 2, 0);
        this.setRotateAngle(this.upperLegR, -0.08726646259971647F, 0, 0.08726646259971647F);
        this.lowerArmR = new ModelRendererTF(this, 9, 114);
        this.lowerArmR.mirror = true;
        this.lowerArmR.setRotationPoint(0.1F, 4.6F, -0.2F);
        this.lowerArmR.addBox(-1.1F, -1, -1, 2, 5, 3, 0);
        this.setRotateAngle(this.lowerArmR, -0.2617993877991494F, -0.08726646259971647F, -0.08726646259971647F);
        this.shoulderR3 = new ModelRendererTF(this, 25, 63);
        this.shoulderR3.mirror = true;
        this.shoulderR3.setRotationPoint(-0.5F, -1.5F, -2);
        this.shoulderR3.addBox(-3, 0, 0, 4, 1, 5, 0);
        this.turret3 = new ModelRendererTF(this, 35, 77);
        this.turret3.setRotationPoint(-2.3F, 2.5F, 0);
        this.turret3.addBox(-2, -2, 0, 2, 2, 3, 0);
        this.setRotateAngle(this.turret3, 0, 0, 1.1990411961201044F);
        this.upperLegL = new ModelRendererTF(this, 80, 68);
        this.upperLegL.mirror = true;
        this.upperLegL.setRotationPoint(2, 2, 0);
        this.upperLegL.addBox(-1, -1.5F, -1, 2, 6, 2, 0);
        this.setRotateAngle(this.upperLegL, -0.08726646259971647F, 0, -0.08726646259971647F);
        this.chestplateR2 = new ModelRendererTF(this, 71, 58);
        this.chestplateR2.mirror = true;
        this.chestplateR2.setRotationPoint(0, 0.5F, 0);
        this.chestplateR2.addBox(-3, -2, 0, 3, 2, 1, 0);
        this.setRotateAngle(this.chestplateR2, -0.4363323129985824F, -0.017453292519943295F, 0);
        this.trackconnectorR4 = new ModelRendererTF(this, 24, 96);
        this.trackconnectorR4.mirror = true;
        this.trackconnectorR4.setRotationPoint(-1, -6, 0);
        this.trackconnectorR4.addBox(0, -3, 0, 1, 3, 1, 0);
        this.setRotateAngle(this.trackconnectorR4, 0, 0, 0.5235987755982988F);
        this.lowerlegR5 = new ModelRendererTF(this, 94, 85);
        this.lowerlegR5.setRotationPoint(1.8F, 0.6F, -1.8F);
        this.lowerlegR5.addBox(-2, 0, 0, 2, 2, 2, 0);
        this.setRotateAngle(this.lowerlegR5, 0.40142572795869574F, 0.03490658503988659F, 0);
        this.lowerlegL2 = new ModelRendererTF(this, 71, 88);
        this.lowerlegL2.mirror = true;
        this.lowerlegL2.setRotationPoint(-1.2F, -1, -1);
        this.lowerlegL2.addBox(0, 0, 0, 3, 6, 1, 0);
        this.shoulderL5 = new ModelRendererTF(this, 39, 63);
        this.shoulderL5.setRotationPoint(0.2F, 2.5F, 0.6F);
        this.shoulderL5.addBox(0, 0, 0, 1, 1, 4, 0);
        this.setRotateAngle(this.shoulderL5, -0.03490658503988659F, 0, 0);
        this.trackL3 = new ModelRendererTF(this, 9, 100);
        this.trackL3.setRotationPoint(-1, -3, 0);
        this.trackL3.addBox(0, -3, 0, 1, 3, 3, 0);
        this.setRotateAngle(this.trackL3, -0.03490658503988659F, -0.017453292519943295F, 0.5235987755982988F);
        this.skirtR1 = new ModelRendererTF(this, 80, 50);
        this.skirtR1.mirror = true;
        this.skirtR1.setRotationPoint(-1.5F, 0.2F, -0.5F);
        this.skirtR1.addBox(-1, 0, 0, 1, 6, 3, 0);
        this.setRotateAngle(this.skirtR1, 0, 0.05235987755982988F, 0.10471975511965977F);
        this.lowerlegL9 = new ModelRendererTF(this, 73, 84);
        this.lowerlegL9.mirror = true;
        this.lowerlegL9.setRotationPoint(0, -1, 0);
        this.lowerlegL9.addBox(0, 0, 0, 1, 1, 3, 0);
        this.setRotateAngle(this.lowerlegL9, -0.3490658503988659F, 0.017453292519943295F, 0);
        this.upperArmL = new ModelRendererTF(this, 24, 111);
        this.upperArmL.setRotationPoint(2, -1.5F, 0);
        this.upperArmL.addBox(-1, -1, -1, 1, 5, 2, 0);
        this.setRotateAngle(this.upperArmL, 0.08726646259971647F, 0, -0.17453292519943295F);
        this.trackcnnectorL5 = new ModelRendererTF(this, 20, 96);
        this.trackcnnectorL5.setRotationPoint(-1, -3, 0);
        this.trackcnnectorL5.addBox(0, -2, 0, 1, 2, 1, 0);
        this.setRotateAngle(this.trackcnnectorL5, -0.017453292519943295F, 0, 0.5235987755982988F);
        this.turret11 = new ModelRendererTF(this, 33, 103);
        this.turret11.setRotationPoint(-2.6F, -1.1F, 2.7F);
        this.turret11.addBox(0, 0, 0, 2, 2, 1, 0);
        this.fistL = new ModelRendererTF(this, 0, 115);
        this.fistL.setRotationPoint(0.1F, 3.6F, 0.2F);
        this.fistL.addBox(-1, 0, -1, 2, 2, 2, 0);
        this.setRotateAngle(this.fistL, -0.08726646259971647F, 0, 0.20943951023931953F);
        this.turret9 = new ModelRendererTF(this, 27, 104);
        this.turret9.setRotationPoint(2, 0, 0);
        this.turret9.addBox(0, 0, 0, 1, 2, 2, 0);
        this.setRotateAngle(this.turret9, 0, -0.017453292519943295F, 0.2617993877991494F);
        this.shoulderL1 = new ModelRendererTF(this, 25, 50);
        this.shoulderL1.setRotationPoint(1, -2.5F, 0.5F);
        this.shoulderL1.addBox(0, -0.5F, -2.5F, 1, 3, 4, 0);
        this.trackR4 = new ModelRendererTF(this, 8, 109);
        this.trackR4.mirror = true;
        this.trackR4.setRotationPoint(2.25F, -3.25F, 0);
        this.trackR4.addBox(-3, 0, 0, 3, 1, 3, 0);
        this.setRotateAngle(this.trackR4, 0, -0.017453292519943295F, 0);
        this.upperlegR2 = new ModelRendererTF(this, 82, 62);
        this.upperlegR2.setRotationPoint(-0.5F, 0, 0.9F);
        this.upperlegR2.addBox(0, 0, 0, 1, 4, 1, 0);
        this.shoulderL4 = new ModelRendererTF(this, 34, 53);
        this.shoulderL4.setRotationPoint(2, 1, 0);
        this.shoulderL4.addBox(0, 0, 0, 1, 4, 5, 0);
        this.lowerarmL3 = new ModelRendererTF(this, 6, 114);
        this.lowerarmL3.setRotationPoint(-0.9F, -1, 2);
        this.lowerarmL3.addBox(0, -2, -1, 2, 2, 1, 0);
        this.setRotateAngle(this.lowerarmL3, 0.17453292519943295F, 0, 0);
        this.wheelR5 = new ModelRendererTF(this, 11, 96);
        this.wheelR5.mirror = true;
        this.wheelR5.setRotationPoint(-0.5F, -4.5F, 0);
        this.wheelR5.addBox(-1, -1, -1.5F, 2, 2, 2, 0);
        this.turret8 = new ModelRendererTF(this, 27, 99);
        this.turret8.setRotationPoint(0, -1.3F, 0.9F);
        this.turret8.addBox(-2, 0, 0, 4, 2, 2, 0);
        this.lowerlegL8 = new ModelRendererTF(this, 62, 89);
        this.lowerlegL8.mirror = true;
        this.lowerlegL8.setRotationPoint(-0.2F, 2.1F, 1);
        this.lowerlegL8.addBox(0, 0, 0, 1, 4, 3, 0);
        this.boxR1 = new ModelRendererTF(this, 2, 86);
        this.boxR1.mirror = true;
        this.boxR1.setRotationPoint(-0.7F, -0.1F, 0);
        this.boxR1.addBox(-3, 0, 0, 3, 3, 2, 0);
        this.boxL3 = new ModelRendererTF(this, 10, 86);
        this.boxL3.mirror = true;
        this.boxL3.setRotationPoint(1, -0.2F, 1.2F);
        this.boxL3.addBox(0, 0, 0, 1, 1, 1, 0);
        this.setRotateAngle(this.boxL3, 0.06806784082777885F, 0, 0);
        this.feetR4 = new ModelRendererTF(this, 80, 77);
        this.feetR4.setRotationPoint(-0.3F, -1, 2.5F);
        this.feetR4.addBox(-1, -1, 0, 1, 3, 2, 0);
        this.setRotateAngle(this.feetR4, -1.0471975511965976F, 0, 0);
        this.bodyparts2 = new ModelRendererTF(this, 63, 66);
        this.bodyparts2.mirror = true;
        this.bodyparts2.setRotationPoint(-1, -4.8F, 2);
        this.bodyparts2.addBox(-1, 0, -1, 1, 5, 1, 0);
        this.setRotateAngle(this.bodyparts2, -0.12217304763960307F, 0, -0.10471975511965977F);
        this.headcrest1 = new ModelRendererTF(this, 3, 71);
        this.headcrest1.setRotationPoint(0, 0.9F, -1.5F);
        this.headcrest1.addBox(-0.5F, -3, -0.5F, 1, 3, 1, 0);
        this.setRotateAngle(this.headcrest1, 0.08726646259971647F, 0, 0);
        this.headR1 = new ModelRendererTF(this, 3, 64);
        this.headR1.mirror = true;
        this.headR1.setRotationPoint(-1, -2.7F, -1.4F);
        this.headR1.addBox(-1, 0, 0, 1, 3, 3, 0);
        this.setRotateAngle(this.headR1, 0, 0, 0.13962634015954636F);
        this.boxL1 = new ModelRendererTF(this, 2, 86);
        this.boxL1.setRotationPoint(0.7F, -0.1F, 0);
        this.boxL1.addBox(0, 0, 0, 3, 3, 2, 0);
        this.wheelR1 = new ModelRendererTF(this, 11, 96);
        this.wheelR1.mirror = true;
        this.wheelR1.setRotationPoint(-0.5F, -1.5F, 0);
        this.wheelR1.addBox(-1, -1, -1.5F, 2, 2, 2, 0);
        this.wheelL5 = new ModelRendererTF(this, 11, 96);
        this.wheelL5.setRotationPoint(0.5F, -4.5F, 0);
        this.wheelL5.addBox(-1, -1, -1.5F, 2, 2, 2, 0);
        this.wheelL2 = new ModelRendererTF(this, 11, 96);
        this.wheelL2.setRotationPoint(-0.5F, -1.5F, 0);
        this.wheelL2.addBox(-1, -1, -1.5F, 2, 2, 2, 0);
        this.waistR2 = new ModelRendererTF(this, 56, 77);
        this.waistR2.mirror = true;
        this.waistR2.setRotationPoint(0, 0, -1);
        this.waistR2.addBox(-2, 0, 0, 2, 2, 1, 0);
        this.setRotateAngle(this.waistR2, 0, 0.15184364492350666F, 0);
        this.trackbase1 = new ModelRendererTF(this, 63, 74);
        this.trackbase1.setRotationPoint(1.5F, -2, 0);
        this.trackbase1.addBox(-4, -2, 0, 5, 1, 2, 0);
        this.setRotateAngle(this.trackbase1, -0.06981317007977318F, 0, 0);
        this.bodyparts3 = new ModelRendererTF(this, 68, 69);
        this.bodyparts3.setRotationPoint(1.2F, -2, -0.2F);
        this.bodyparts3.addBox(0, 0, 0, 1, 2, 2, 0);
        this.setRotateAngle(this.bodyparts3, -0.15707963267948966F, 0, 0);
        this.wheelR4 = new ModelRendererTF(this, 11, 96);
        this.wheelR4.mirror = true;
        this.wheelR4.setRotationPoint(0.5F, -2, 0);
        this.wheelR4.addBox(-2, -1, -1.5F, 2, 2, 2, 0);
        this.chestplateR1 = new ModelRendererTF(this, 61, 59);
        this.chestplateR1.mirror = true;
        this.chestplateR1.setRotationPoint(-0.2F, -2.8F, -2.7F);
        this.chestplateR1.addBox(-3, 0, -1, 3, 3, 3, 0);
        this.setRotateAngle(this.chestplateR1, 0.3141592653589793F, 0.13962634015954636F, 0);
        this.lowerlegL6 = new ModelRendererTF(this, 94, 85);
        this.lowerlegL6.mirror = true;
        this.lowerlegL6.setRotationPoint(0, 2, 1.6F);
        this.lowerlegL6.addBox(0, 0, -2, 2, 2, 2, 0);
        this.setRotateAngle(this.lowerlegL6, -0.22689280275926282F, 0.017453292519943295F, 0);
        this.waistR3 = new ModelRendererTF(this, 60, 78);
        this.waistR3.mirror = true;
        this.waistR3.setRotationPoint(0, 0, 2.5F);
        this.waistR3.addBox(-3, 0, -2, 3, 2, 2, 0);
        this.setRotateAngle(this.waistR3, 0, -0.24434609527920614F, 0);
        this.headcrest4 = new ModelRendererTF(this, 0, 77);
        this.headcrest4.setRotationPoint(0, -0.5F, 0);
        this.headcrest4.addBox(-1.5F, 0, -1.5F, 3, 1, 3, 0);
        this.turret4 = new ModelRendererTF(this, 32, 83);
        this.turret4.setRotationPoint(0, 2, 2);
        this.turret4.addBox(-2.5F, 0, -2, 5, 1, 3, 0);
        this.wheelL3 = new ModelRendererTF(this, 11, 96);
        this.wheelL3.setRotationPoint(0.5F, 0.5F, 0);
        this.wheelL3.addBox(-1, -1, -1.5F, 2, 2, 2, 0);
        this.shoulderL8 = new ModelRendererTF(this, 25, 58);
        this.shoulderL8.setRotationPoint(1, -0.5F, -1.7F);
        this.shoulderL8.addBox(0, 0, 0, 1, 1, 3, 0);
        this.lowerarmR4 = new ModelRendererTF(this, 16, 114);
        this.lowerarmR4.mirror = true;
        this.lowerarmR4.setRotationPoint(-1, 3.8F, 0);
        this.lowerarmR4.addBox(0, 0, 0, 1, 1, 2, 0);
        this.setRotateAngle(this.lowerarmR4, 0.017453292519943295F, 0, -0.3839724354387525F);
        this.headcrest2 = new ModelRendererTF(this, 16, 71);
        this.headcrest2.setRotationPoint(1, 0.5F, -1.5F);
        this.headcrest2.addBox(-0.5F, -2, -0.5F, 1, 2, 1, 0);
        this.setRotateAngle(this.headcrest2, 0.20071286397934787F, 0, 0.19198621771937624F);
        this.trackconnectorR3 = new ModelRendererTF(this, 29, 90);
        this.trackconnectorR3.mirror = true;
        this.trackconnectorR3.setRotationPoint(-2, 0, -1);
        this.trackconnectorR3.addBox(-1, -6, 0, 1, 7, 1, 0);
        this.setRotateAngle(this.trackconnectorR3, 0.06981317007977318F, 0.10471975511965977F, 0.03490658503988659F);
        this.trackR2 = new ModelRendererTF(this, 9, 100);
        this.trackR2.mirror = true;
        this.trackR2.setRotationPoint(-1, 0, 0);
        this.trackR2.addBox(0, -3, 0, 1, 3, 3, 0);
        this.setRotateAngle(this.trackR2, 0, 0, 0.5235987755982988F);
        this.turret6 = new ModelRendererTF(this, 42, 94);
        this.turret6.setRotationPoint(1.5F, 0, 0);
        this.turret6.addBox(0, 0, 0, 2, 2, 3, 0);
        this.setRotateAngle(this.turret6, 0, 0, 0.7138396640656808F);
        this.lowerarmR2 = new ModelRendererTF(this, 2, 120);
        this.lowerarmR2.mirror = true;
        this.lowerarmR2.setRotationPoint(0.9F, -1, -1);
        this.lowerarmR2.addBox(0, 0, 0, 1, 5, 2, 0);
        this.setRotateAngle(this.lowerarmR2, 0.03490658503988659F, -0.03490658503988659F, 0.19198621771937624F);
        this.turret7 = new ModelRendererTF(this, 42, 94);
        this.turret7.setRotationPoint(-1.5F, 0, 0);
        this.turret7.addBox(-2, 0, 0, 2, 2, 3, 0);
        this.setRotateAngle(this.turret7, 0, 0, -0.7138396640656808F);
        this.lowerlegR12 = new ModelRendererTF(this, 85, 88);
        this.lowerlegR12.setRotationPoint(0, 0, 0);
        this.lowerlegR12.addBox(-2, -1, 0, 2, 1, 1, 0);
        this.setRotateAngle(this.lowerlegR12, -0.5061454830783556F, 0, -0.017453292519943295F);
        this.waistL3 = new ModelRendererTF(this, 60, 78);
        this.waistL3.setRotationPoint(0, 0, 2.5F);
        this.waistL3.addBox(0, 0, -2, 3, 2, 2, 0);
        this.setRotateAngle(this.waistL3, 0, 0.24434609527920614F, 0);
        this.headcrest3 = new ModelRendererTF(this, 16, 71);
        this.headcrest3.mirror = true;
        this.headcrest3.setRotationPoint(-1, 0.5F, -1.5F);
        this.headcrest3.addBox(-0.5F, -2, -0.5F, 1, 2, 1, 0);
        this.setRotateAngle(this.headcrest3, 0.20071286397934787F, 0, -0.19198621771937624F);
        this.trackconnectorR2 = new ModelRendererTF(this, 20, 93);
        this.trackconnectorR2.mirror = true;
        this.trackconnectorR2.setRotationPoint(0, 0.1F, -0.1F);
        this.trackconnectorR2.addBox(-3, 0, 0, 3, 1, 1, 0);
        this.setRotateAngle(this.trackconnectorR2, 0, 0.7853981633974483F, -0.13962634015954636F);
        this.upperarmL2 = new ModelRendererTF(this, 27, 119);
        this.upperarmL2.setRotationPoint(0, -1, -0.5F);
        this.upperarmL2.addBox(0, 0, 0, 1, 5, 1, 0);
        this.headL2 = new ModelRendererTF(this, 9, 63);
        this.headL2.setRotationPoint(0, 0.7F, 0);
        this.headL2.addBox(0, 0, -1, 1, 2, 1, 0);
        this.setRotateAngle(this.headL2, 0.4625122517784973F, 0, 0.017453292519943295F);
        this.turret2 = new ModelRendererTF(this, 35, 77);
        this.turret2.setRotationPoint(2.3F, 2.5F, 0);
        this.turret2.addBox(0, -2, 0, 2, 2, 3, 0);
        this.setRotateAngle(this.turret2, 0, 0, -1.1990411961201044F);
        this.barrelbase4 = new ModelRendererTF(this, 35, 90);
        this.barrelbase4.setRotationPoint(0, 0, 0);
        this.barrelbase4.addBox(-0.2F, 0.5F, -0.8F, 1, 2, 1, 0);
        this.boxL2 = new ModelRendererTF(this, 2, 82);
        this.boxL2.setRotationPoint(0, -0.9F, 0.2F);
        this.boxL2.addBox(0, 0, 0, 3, 1, 2, 0);
        this.setRotateAngle(this.boxL2, -0.32637657012293964F, 0, 0);
        this.lowerlegL12 = new ModelRendererTF(this, 85, 88);
        this.lowerlegL12.mirror = true;
        this.lowerlegL12.setRotationPoint(0, 0, 0);
        this.lowerlegL12.addBox(0, -1, 0, 2, 1, 1, 0);
        this.setRotateAngle(this.lowerlegL12, -0.5061454830783556F, 0, 0.017453292519943295F);
        this.shoulderL6 = new ModelRendererTF(this, 31, 50);
        this.shoulderL6.setRotationPoint(-0.5F, -0.3F, 2.8F);
        this.shoulderL6.addBox(0, 0, 0, 3, 1, 2, 0);
        this.headL1 = new ModelRendererTF(this, 3, 64);
        this.headL1.setRotationPoint(1, -2.7F, -1.4F);
        this.headL1.addBox(0, 0, 0, 1, 3, 3, 0);
        this.setRotateAngle(this.headL1, 0, 0, -0.13962634015954636F);
        this.lowerarmL5 = new ModelRendererTF(this, 16, 114);
        this.lowerarmL5.setRotationPoint(1, 3.8F, 0);
        this.lowerarmL5.addBox(-1, 0, 0, 1, 1, 2, 0);
        this.setRotateAngle(this.lowerarmL5, 0.017453292519943295F, 0, 0.3839724354387525F);
        this.lowerlegR13 = new ModelRendererTF(this, 98, 77);
        this.lowerlegR13.setRotationPoint(-2.3F, 1.3F, 0.5F);
        this.lowerlegR13.addBox(-1, 0, 0, 1, 5, 1, 0);
        this.lowerlegR2 = new ModelRendererTF(this, 71, 88);
        this.lowerlegR2.setRotationPoint(1.2F, -1, -1);
        this.lowerlegR2.addBox(-3, 0, 0, 3, 6, 1, 0);
        this.trackL8 = new ModelRendererTF(this, 8, 109);
        this.trackL8.setRotationPoint(0.25F, 7.25F, 0);
        this.trackL8.addBox(0, 0, 0, 3, 1, 3, 0);
        this.setRotateAngle(this.trackL8, -0.03490658503988659F, 0, 0);
        this.upperArmR = new ModelRendererTF(this, 24, 111);
        this.upperArmR.mirror = true;
        this.upperArmR.setRotationPoint(-2, -1.5F, 0);
        this.upperArmR.addBox(0, -1, -1, 1, 5, 2, 0);
        this.setRotateAngle(this.upperArmR, 0.08726646259971647F, 0, 0.17453292519943295F);
        this.trackconnectorL4 = new ModelRendererTF(this, 24, 96);
        this.trackconnectorL4.setRotationPoint(1, -6, 0);
        this.trackconnectorL4.addBox(-1, -3, 0, 1, 3, 1, 0);
        this.setRotateAngle(this.trackconnectorL4, 0, 0, -0.5235987755982988F);
        this.shoulderR1 = new ModelRendererTF(this, 25, 50);
        this.shoulderR1.mirror = true;
        this.shoulderR1.setRotationPoint(-1, -2.5F, 0.5F);
        this.shoulderR1.addBox(-1, -0.5F, -2.5F, 1, 3, 4, 0);
        this.lowerlegR6 = new ModelRendererTF(this, 94, 85);
        this.lowerlegR6.setRotationPoint(0, 2, 1.6F);
        this.lowerlegR6.addBox(-2, 0, -2, 2, 2, 2, 0);
        this.setRotateAngle(this.lowerlegR6, -0.22689280275926282F, -0.017453292519943295F, 0);
        this.turret1 = new ModelRendererTF(this, 32, 71);
        this.turret1.setRotationPoint(0, 1.3F, 0);
        this.turret1.addBox(-2, 0.4F, 0, 4, 2, 3, 0);
        this.turret5 = new ModelRendererTF(this, 45, 88);
        this.turret5.setRotationPoint(0, -2.3F, 0);
        this.turret5.addBox(-1.5F, 0, 0, 3, 2, 3, 0);
        this.wheelR3 = new ModelRendererTF(this, 11, 96);
        this.wheelR3.mirror = true;
        this.wheelR3.setRotationPoint(-0.5F, 0.5F, 0);
        this.wheelR3.addBox(-1, -1, -1.5F, 2, 2, 2, 0);
        this.feetL4 = new ModelRendererTF(this, 80, 77);
        this.feetL4.mirror = true;
        this.feetL4.setRotationPoint(0.3F, -1, 2.5F);
        this.feetL4.addBox(0, -1, 0, 1, 3, 2, 0);
        this.setRotateAngle(this.feetL4, -1.0471975511965976F, 0, 0);
        this.trackconnectorL2 = new ModelRendererTF(this, 20, 93);
        this.trackconnectorL2.setRotationPoint(0, 0.1F, -0.1F);
        this.trackconnectorL2.addBox(0, 0, 0, 3, 1, 1, 0);
        this.setRotateAngle(this.trackconnectorL2, 0, -0.7853981633974483F, 0.13962634015954636F);
        this.lowerlegR10 = new ModelRendererTF(this, 96, 90);
        this.lowerlegR10.setRotationPoint(0.2F, 5, 0);
        this.lowerlegR10.addBox(-1, 0, 0, 1, 2, 4, 0);
        this.setRotateAngle(this.lowerlegR10, 0, 0.08726646259971647F, 0);
        this.crotch2 = new ModelRendererTF(this, 58, 89);
        this.crotch2.setRotationPoint(1, 2, 3);
        this.crotch2.addBox(-1, -2, -1, 2, 2, 1, 0);
        this.setRotateAngle(this.crotch2, -0.4886921905584123F, 0, 0);
        this.torsoconnector = new ModelRendererTF(this, 50, 50);
        this.torsoconnector.setRotationPoint(0, 0, 0);
        this.torsoconnector.addBox(-1.5F, -5, -1, 3, 5, 2, 0);
        this.chestplateL1 = new ModelRendererTF(this, 61, 59);
        this.chestplateL1.setRotationPoint(0.2F, -2.8F, -2.7F);
        this.chestplateL1.addBox(0, 0, -1, 3, 3, 3, 0);
        this.setRotateAngle(this.chestplateL1, 0.3141592653589793F, -0.13962634015954636F, 0);
        this.shoulderL3 = new ModelRendererTF(this, 25, 63);
        this.shoulderL3.setRotationPoint(0.5F, -1.5F, -2);
        this.shoulderL3.addBox(-1, 0, 0, 4, 1, 5, 0);
        this.turretconnector = new ModelRendererTF(this, 21, 70);
        this.turretconnector.setRotationPoint(0, -4, 1.5F);
        this.turretconnector.addBox(-2, 0, 0, 4, 5, 1, 0);
        this.setRotateAngle(this.turretconnector, 0.10471975511965977F, 0, 0);
        this.trackconnectorR1 = new ModelRendererTF(this, 20, 90);
        this.trackconnectorR1.mirror = true;
        this.trackconnectorR1.setRotationPoint(-3, -4, 3);
        this.trackconnectorR1.addBox(0, 0, 0, 3, 1, 1, 0);
        this.setRotateAngle(this.trackconnectorR1, 0.06981317007977318F, 0.7853981633974483F, 0.13962634015954636F);
        this.trackR3 = new ModelRendererTF(this, 9, 100);
        this.trackR3.mirror = true;
        this.trackR3.setRotationPoint(1, -3, 0);
        this.trackR3.addBox(-1, -3, 0, 1, 3, 3, 0);
        this.setRotateAngle(this.trackR3, -0.03490658503988659F, 0.017453292519943295F, -0.5235987755982988F);
        this.trackR8 = new ModelRendererTF(this, 9, 100);
        this.trackR8.setRotationPoint(1, -3, 0);
        this.trackR8.addBox(-1, -3, 0, 1, 3, 3, 0);
        this.setRotateAngle(this.trackR8, -0.03490658503988659F, 0.017453292519943295F, -0.5235987755982988F);
        this.lowerlegR9 = new ModelRendererTF(this, 73, 84);
        this.lowerlegR9.setRotationPoint(0, -1, 0);
        this.lowerlegR9.addBox(-1, 0, 0, 1, 1, 3, 0);
        this.setRotateAngle(this.lowerlegR9, -0.3490658503988659F, -0.017453292519943295F, 0);
        this.chestplateL2 = new ModelRendererTF(this, 71, 58);
        this.chestplateL2.setRotationPoint(0, 0.5F, 0);
        this.chestplateL2.addBox(0, -2, 0, 3, 2, 1, 0);
        this.setRotateAngle(this.chestplateL2, -0.4363323129985824F, 0.017453292519943295F, 0);
        this.shoulderR5 = new ModelRendererTF(this, 39, 63);
        this.shoulderR5.mirror = true;
        this.shoulderR5.setRotationPoint(-0.2F, 2.5F, 0.6F);
        this.shoulderR5.addBox(-1, 0, 0, 1, 1, 4, 0);
        this.setRotateAngle(this.shoulderR5, -0.03490658503988659F, 0, 0);
        this.shoulderR7 = new ModelRendererTF(this, 24, 64);
        this.shoulderR7.mirror = true;
        this.shoulderR7.setRotationPoint(-0.5F, 0, 0);
        this.shoulderR7.addBox(-2, 0, -1, 2, 1, 1, 0);
        this.setRotateAngle(this.shoulderR7, 0.3490658503988659F, 0, 0);
        this.lowerlegR4 = new ModelRendererTF(this, 89, 88);
        this.lowerlegR4.setRotationPoint(0, 0, 3.1F);
        this.lowerlegR4.addBox(-1, -0.3F, -2, 1, 6, 2, 0);
        this.setRotateAngle(this.lowerlegR4, 0.3211405823669566F, -0.03490658503988659F, 0);
        this.boxR3 = new ModelRendererTF(this, 10, 86);
        this.boxR3.setRotationPoint(-1, -0.2F, 1.2F);
        this.boxR3.addBox(-1, 0, 0, 1, 1, 1, 0);
        this.setRotateAngle(this.boxR3, 0.06806784082777885F, 0, 0);
        this.shoulderL2 = new ModelRendererTF(this, 25, 50);
        this.shoulderL2.mirror = true;
        this.shoulderL2.setRotationPoint(1.5F, -0.5F, -2.5F);
        this.shoulderL2.addBox(0, 0, 0, 1, 3, 4, 0);
        this.shoulderR6 = new ModelRendererTF(this, 31, 50);
        this.shoulderR6.mirror = true;
        this.shoulderR6.setRotationPoint(0.5F, -0.3F, 2.8F);
        this.shoulderR6.addBox(-3, 0, 0, 3, 1, 2, 0);
        this.trackconnectorL3 = new ModelRendererTF(this, 29, 90);
        this.trackconnectorL3.setRotationPoint(2, 0, -1);
        this.trackconnectorL3.addBox(0, -6, 0, 1, 7, 1, 0);
        this.setRotateAngle(this.trackconnectorL3, 0.05235987755982988F, -0.10471975511965977F, -0.03490658503988659F);
        this.lowerlegR3 = new ModelRendererTF(this, 80, 88);
        this.lowerlegR3.setRotationPoint(-2, 1, 1);
        this.lowerlegR3.addBox(-1, 0, 0, 1, 6, 3, 0);
        this.setRotateAngle(this.lowerlegR3, -0.19198621771937624F, -0.017453292519943295F, 0);
        this.feetL5 = new ModelRendererTF(this, 79, 82);
        this.feetL5.mirror = true;
        this.feetL5.setRotationPoint(-1.5F, 1, -4);
        this.feetL5.addBox(0, 0, 0, 3, 1, 4, 0);
        this.bodyparts1 = new ModelRendererTF(this, 63, 66);
        this.bodyparts1.setRotationPoint(1, -4.8F, 2);
        this.bodyparts1.addBox(0, 0, -1, 1, 5, 1, 0);
        this.setRotateAngle(this.bodyparts1, -0.12217304763960307F, 0, 0.10471975511965977F);
        this.lowerlegL7 = new ModelRendererTF(this, 94, 85);
        this.lowerlegL7.mirror = true;
        this.lowerlegL7.setRotationPoint(0, 2, -0.4F);
        this.lowerlegL7.addBox(0, 0, -2, 2, 2, 2, 0);
        this.setRotateAngle(this.lowerlegL7, -0.17453292519943295F, 0.017453292519943295F, 0);
        this.feetL2 = new ModelRendererTF(this, 87, 76);
        this.feetL2.mirror = true;
        this.feetL2.setRotationPoint(-1.5F, 0, -2.5F);
        this.feetL2.addBox(0, 0, 3, 3, 2, 2, 0);
        this.chestplateL3 = new ModelRendererTF(this, 70, 62);
        this.chestplateL3.setRotationPoint(3, -1.9F, 0);
        this.chestplateL3.addBox(-1, 0, 0, 1, 2, 4, 0);
        this.setRotateAngle(this.chestplateL3, 0.17453292519943295F, 0.17453292519943295F, 0.03490658503988659F);
        this.waistL1 = new ModelRendererTF(this, 49, 83);
        this.waistL1.setRotationPoint(1.5F, 0, -0.5F);
        this.waistL1.addBox(0, 0, -0.7F, 2, 2, 3, 0);
        this.wheelL1 = new ModelRendererTF(this, 11, 96);
        this.wheelL1.setRotationPoint(0.5F, -1.5F, 0);
        this.wheelL1.addBox(-1, -1, -1.5F, 2, 2, 2, 0);
        this.lowerlegL4 = new ModelRendererTF(this, 89, 88);
        this.lowerlegL4.mirror = true;
        this.lowerlegL4.setRotationPoint(0, 0, 3.1F);
        this.lowerlegL4.addBox(0, -0.3F, -2, 1, 6, 2, 0);
        this.setRotateAngle(this.lowerlegL4, 0.3211405823669566F, 0.03490658503988659F, 0);
        this.headback1 = new ModelRendererTF(this, 3, 59);
        this.headback1.setRotationPoint(0, -2.7F, 1);
        this.headback1.addBox(-2, 0, 0, 4, 3, 1, 0);
        this.setRotateAngle(this.headback1, 0.15707963267948966F, 0, 0);
        this.lowerlegL10 = new ModelRendererTF(this, 96, 90);
        this.lowerlegL10.mirror = true;
        this.lowerlegL10.setRotationPoint(-0.2F, 5, 0);
        this.lowerlegL10.addBox(0, 0, 0, 1, 2, 4, 0);
        this.setRotateAngle(this.lowerlegL10, 0, -0.08726646259971647F, 0);
        this.lowerarmL2 = new ModelRendererTF(this, 2, 120);
        this.lowerarmL2.setRotationPoint(-0.9F, -1, -1);
        this.lowerarmL2.addBox(-1, 0, 0, 1, 5, 2, 0);
        this.setRotateAngle(this.lowerarmL2, 0.03490658503988659F, 0.03490658503988659F, -0.19198621771937624F);
        this.turret12 = new ModelRendererTF(this, 40, 101);
        this.turret12.setRotationPoint(1, -0.4F, 2.2F);
        this.turret12.addBox(0, 0, 0, 1, 3, 1, 0);
        this.trackL7 = new ModelRendererTF(this, 9, 100);
        this.trackL7.mirror = true;
        this.trackL7.setRotationPoint(-1, -3, 0);
        this.trackL7.addBox(0, -3, 0, 1, 3, 3, 0);
        this.setRotateAngle(this.trackL7, -0.03490658503988659F, -0.017453292519943295F, 0.5235987755982988F);
        this.bodyparts4 = new ModelRendererTF(this, 68, 69);
        this.bodyparts4.mirror = true;
        this.bodyparts4.setRotationPoint(-1.2F, -2, -0.2F);
        this.bodyparts4.addBox(-1, 0, 0, 1, 2, 2, 0);
        this.setRotateAngle(this.bodyparts4, -0.15707963267948966F, 0, 0);
        this.barrelbase2 = new ModelRendererTF(this, 35, 90);
        this.barrelbase2.mirror = true;
        this.barrelbase2.setRotationPoint(0, 0, 0);
        this.barrelbase2.addBox(-0.8F, 0.5F, -0.8F, 1, 2, 1, 0);
        this.lowerlegL5 = new ModelRendererTF(this, 94, 85);
        this.lowerlegL5.mirror = true;
        this.lowerlegL5.setRotationPoint(-1.8F, 0.6F, -1.8F);
        this.lowerlegL5.addBox(0, 0, 0, 2, 2, 2, 0);
        this.setRotateAngle(this.lowerlegL5, 0.40142572795869574F, -0.03490658503988659F, 0);
        this.trackconnectorL1 = new ModelRendererTF(this, 20, 90);
        this.trackconnectorL1.setRotationPoint(3, -4, 3);
        this.trackconnectorL1.addBox(-3, 0, 0, 3, 1, 1, 0);
        this.setRotateAngle(this.trackconnectorL1, 0.06981317007977318F, -0.7853981633974483F, -0.13962634015954636F);
        this.lowerlegR1 = new ModelRendererTF(this, 87, 60);
        this.lowerlegR1.setRotationPoint(0, 4.6F, -0.8F);
        this.lowerlegR1.addBox(-1, -0.3F, 0, 2, 6, 3, 0);
        this.setRotateAngle(this.lowerlegR1, 0.17453292519943295F, 0, -0.08726646259971647F);
        this.waistR1 = new ModelRendererTF(this, 49, 83);
        this.waistR1.mirror = true;
        this.waistR1.setRotationPoint(-1.5F, 0, -0.5F);
        this.waistR1.addBox(-2, 0, -0.7F, 2, 2, 3, 0);
        this.lowerarmR5 = new ModelRendererTF(this, 6, 114);
        this.lowerarmR5.mirror = true;
        this.lowerarmR5.setRotationPoint(0.9F, -1, 2);
        this.lowerarmR5.addBox(-2, -2, -1, 2, 2, 1, 0);
        this.setRotateAngle(this.lowerarmR5, 0.17453292519943295F, 0, 0);
        this.wheelL4 = new ModelRendererTF(this, 11, 96);
        this.wheelL4.setRotationPoint(0.5F, -2, 0);
        this.wheelL4.addBox(-1, -1, -1.5F, 2, 2, 2, 0);
        this.trackL1 = new ModelRendererTF(this, 18, 100);
        this.trackL1.setRotationPoint(1, -6, -2.1F);
        this.trackL1.addBox(0, 0, 0, 1, 8, 3, 0);
        this.crotch1 = new ModelRendererTF(this, 60, 83);
        this.crotch1.setRotationPoint(-1, 1.7F, -1.8F);
        this.crotch1.addBox(0, 0, 0, 2, 2, 3, 0);
        this.setRotateAngle(this.crotch1, 0.13962634015954636F, 0, 0);
        this.neck1 = new ModelRendererTF(this, 3, 48);
        this.neck1.setRotationPoint(0, -4, 0);
        this.neck1.addBox(-1, -0.5F, -1, 2, 1, 2, 0);
        this.trackL2 = new ModelRendererTF(this, 9, 100);
        this.trackL2.setRotationPoint(1, 0, 0);
        this.trackL2.addBox(-1, -3, 0, 1, 3, 3, 0);
        this.setRotateAngle(this.trackL2, 0, 0, -0.5235987755982988F);
        this.lowerlegL13 = new ModelRendererTF(this, 98, 77);
        this.lowerlegL13.mirror = true;
        this.lowerlegL13.setRotationPoint(2.3F, 1.3F, 0.5F);
        this.lowerlegL13.addBox(0, 0, 0, 1, 5, 1, 0);
        this.lowerlegL11 = new ModelRendererTF(this, 69, 82);
        this.lowerlegL11.mirror = true;
        this.lowerlegL11.setRotationPoint(0.5F, 2.5F, -0.5F);
        this.lowerlegL11.addBox(0, 0, 0, 2, 3, 1, 0);
        this.barrelbase3 = new ModelRendererTF(this, 35, 90);
        this.barrelbase3.setRotationPoint(0, 0, 0);
        this.barrelbase3.addBox(-0.2F, 0.5F, -0.2F, 1, 2, 1, 0);
        this.torsobase = new ModelRendererTF(this, 61, 50);
        this.torsobase.setRotationPoint(0, -4.5F, 0);
        this.torsobase.addBox(-2.5F, -4, -2, 5, 4, 4, 0);
        this.fistR = new ModelRendererTF(this, 0, 115);
        this.fistR.mirror = true;
        this.fistR.setRotationPoint(-0.1F, 3.6F, 0.2F);
        this.fistR.addBox(-1, 0, -1, 2, 2, 2, 0);
        this.setRotateAngle(this.fistR, -0.08726646259971647F, 0, -0.20943951023931953F);
        this.feetR5 = new ModelRendererTF(this, 79, 82);
        this.feetR5.setRotationPoint(1.5F, 1, -4);
        this.feetR5.addBox(-3, 0, 0, 3, 1, 4, 0);
        this.barrelbase1 = new ModelRendererTF(this, 19, 84);
        this.barrelbase1.setRotationPoint(0, 0.8F, -0.5F);
        this.barrelbase1.addBox(-2, -0.5F, -1, 4, 1, 2, 0);
        this.setRotateAngle(this.barrelbase1, -0.06981317007977318F, 0, 0);
        this.barrel2 = new ModelRendererTF(this, 33, 94);
        this.barrel2.setRotationPoint(0, 8.5F, 0);
        this.barrel2.addBox(-1, -1, -1, 2, 2, 2, 0);
        this.lowerarmR3 = new ModelRendererTF(this, 20, 118);
        this.lowerarmR3.mirror = true;
        this.lowerarmR3.setRotationPoint(-0.5F, -1, -0.9F);
        this.lowerarmR3.addBox(-1, -1.2F, 0, 1, 5, 2, 0);
        this.setRotateAngle(this.lowerarmR3, 0.15707963267948966F, 0, 0);
        this.trackR5 = new ModelRendererTF(this, 8, 109);
        this.trackR5.mirror = true;
        this.trackR5.setRotationPoint(0.25F, 7.25F, 0);
        this.trackR5.addBox(-1, 0, 0, 3, 1, 3, 0);
        this.setRotateAngle(this.trackR5, -0.03490658503988659F, 0, 0);
        this.lowerlegR8 = new ModelRendererTF(this, 62, 89);
        this.lowerlegR8.setRotationPoint(0.2F, 2.1F, 1);
        this.lowerlegR8.addBox(-1, 0, 0, 1, 4, 3, 0);
        this.trackR6 = new ModelRendererTF(this, 18, 100);
        this.trackR6.setRotationPoint(1.5F, -6, -2.1F);
        this.trackR6.addBox(-1, 0, 0, 1, 8, 3, 0);
        this.waistL2 = new ModelRendererTF(this, 56, 77);
        this.waistL2.setRotationPoint(0, 0, -1);
        this.waistL2.addBox(0, 0, 0, 2, 2, 1, 0);
        this.setRotateAngle(this.waistL2, 0, -0.15184364492350666F, 0);
        this.stomach1 = new ModelRendererTF(this, 50, 70);
        this.stomach1.setRotationPoint(-2, -4.5F, -2);
        this.stomach1.addBox(0, 0, 0, 4, 5, 2, 0);
        this.setRotateAngle(this.stomach1, 0.15707963267948966F, 0, 0);
        this.feetR3 = new ModelRendererTF(this, 90, 81);
        this.feetR3.setRotationPoint(2.5F, 1.1F, -1.4F);
        this.feetR3.addBox(-2, 0, 0, 2, 1, 3, 0);
        this.setRotateAngle(this.feetR3, 0.41887902047863906F, 0, -0.017453292519943295F);
        this.waist = new ModelRendererTF(this, 46, 78);
        this.waist.setRotationPoint(0, 9.65F, 0);
        this.waist.addBox(-1.5F, 0, -1.5F, 3, 2, 3, 0);
        this.headtop1 = new ModelRendererTF(this, 3, 71);
        this.headtop1.setRotationPoint(0, -3.5F, 0);
        this.headtop1.addBox(-2, 0, -2, 4, 1, 4, 0);
        this.lowerarmL4 = new ModelRendererTF(this, 20, 118);
        this.lowerarmL4.setRotationPoint(0.5F, -1, -0.9F);
        this.lowerarmL4.addBox(0, -1.2F, 0, 1, 5, 2, 0);
        this.setRotateAngle(this.lowerarmL4, 0.15707963267948966F, 0, 0);
        this.barrelbase5 = new ModelRendererTF(this, 35, 90);
        this.barrelbase5.mirror = true;
        this.barrelbase5.setRotationPoint(0, 0, 0);
        this.barrelbase5.addBox(-0.8F, 0.5F, -0.2F, 1, 2, 1, 0);
        this.chestplateR3 = new ModelRendererTF(this, 70, 62);
        this.chestplateR3.mirror = true;
        this.chestplateR3.setRotationPoint(-3, -1.9F, 0);
        this.chestplateR3.addBox(0, 0, 0, 1, 2, 4, 0);
        this.setRotateAngle(this.chestplateR3, 0.17453292519943295F, -0.17453292519943295F, -0.03490658503988659F);
        this.shoulderR2 = new ModelRendererTF(this, 25, 50);
        this.shoulderR2.setRotationPoint(-1.5F, -0.5F, -2.5F);
        this.shoulderR2.addBox(-1, 0, 0, 1, 3, 4, 0);
        this.shoulderR8 = new ModelRendererTF(this, 25, 58);
        this.shoulderR8.setRotationPoint(-1, -0.5F, -1.7F);
        this.shoulderR8.addBox(-1, 0, 0, 1, 1, 3, 0);
        this.headR2 = new ModelRendererTF(this, 9, 63);
        this.headR2.mirror = true;
        this.headR2.setRotationPoint(0, 0.7F, 0);
        this.headR2.addBox(-1, 0, -1, 1, 2, 1, 0);
        this.setRotateAngle(this.headR2, 0.4625122517784973F, 0, -0.017453292519943295F);
        this.trackR1 = new ModelRendererTF(this, 18, 100);
        this.trackR1.mirror = true;
        this.trackR1.setRotationPoint(-1, -6, -2.1F);
        this.trackR1.addBox(-1, 0, 0, 1, 8, 3, 0);
        this.upperlegL2 = new ModelRendererTF(this, 82, 62);
        this.upperlegL2.mirror = true;
        this.upperlegL2.setRotationPoint(-0.5F, 0, 0.9F);
        this.upperlegL2.addBox(0, 0, 0, 1, 4, 1, 0);
        this.trackL5 = new ModelRendererTF(this, 18, 100);
        this.trackL5.mirror = true;
        this.trackL5.setRotationPoint(-1.5F, -6, -2.1F);
        this.trackL5.addBox(0, 0, 0, 1, 8, 3, 0);
        this.upperArmR.addChild(this.upperarmR2);
        this.trackconnectorR4.addChild(this.wheelR2);
        this.upperArmL.addChild(this.lowerArmL);
        this.upperLegL.addChild(this.lowerlegL1);
        this.lowerlegL1.addChild(this.feetbaseL1);
        this.trackL3.addChild(this.trackL4);
        this.waistL1.addChild(this.skirtL1);
        this.skirtL1.addChild(this.skirtL2);
        this.trackR6.addChild(this.trackR7);
        this.turretconnector.addChild(this.turretbase);
        this.feetbaseR1.addChild(this.feetR2);
        this.crotch1.addChild(this.crotch3);
        this.shoulderL6.addChild(this.shoulderL7);
        this.barrelbase1.addChild(this.barrel1);
        this.shoulderR3.addChild(this.shoulderR4);
        this.turret8.addChild(this.turret10);
        this.neck1.addChild(this.headbase);
        this.lowerlegR6.addChild(this.lowerlegR7);
        this.headbase.addChild(this.headchin1);
        this.boxR1.addChild(this.boxR2);
        this.trackL5.addChild(this.trackL6);
        this.torsobase.addChild(this.torsobaseL);
        this.trackconnectorR4.addChild(this.trackconnectorR5);
        this.torsobase.addChild(this.chestplate1);
        this.lowerlegR2.addChild(this.lowerlegR11);
        this.feetL2.addChild(this.feetL3);
        this.skirtR1.addChild(this.skirtR2);
        this.torsobase.addChild(this.torsobaseR);
        this.lowerlegR1.addChild(this.feetbaseR1);
        this.lowerlegL2.addChild(this.lowerlegL3);
        this.waist.addChild(this.upperLegR);
        this.upperArmR.addChild(this.lowerArmR);
        this.shoulderR1.addChild(this.shoulderR3);
        this.turret1.addChild(this.turret3);
        this.waist.addChild(this.upperLegL);
        this.chestplateR1.addChild(this.chestplateR2);
        this.trackconnectorR3.addChild(this.trackconnectorR4);
        this.lowerlegR4.addChild(this.lowerlegR5);
        this.lowerlegL1.addChild(this.lowerlegL2);
        this.shoulderL4.addChild(this.shoulderL5);
        this.trackL2.addChild(this.trackL3);
        this.waistR1.addChild(this.skirtR1);
        this.lowerlegL8.addChild(this.lowerlegL9);
        this.torsobaseL.addChild(this.upperArmL);
        this.trackconnectorL4.addChild(this.trackcnnectorL5);
        this.turretbase.addChild(this.turret11);
        this.lowerArmL.addChild(this.fistL);
        this.turret8.addChild(this.turret9);
        this.torsobaseL.addChild(this.shoulderL1);
        this.trackR3.addChild(this.trackR4);
        this.upperLegR.addChild(this.upperlegR2);
        this.shoulderL3.addChild(this.shoulderL4);
        this.lowerArmL.addChild(this.lowerarmL3);
        this.trackconnectorR3.addChild(this.wheelR5);
        this.turret5.addChild(this.turret8);
        this.lowerlegL2.addChild(this.lowerlegL8);
        this.waistR3.addChild(this.boxR1);
        this.boxL1.addChild(this.boxL3);
        this.feetR3.addChild(this.feetR4);
        this.torsoconnector.addChild(this.bodyparts2);
        this.headtop1.addChild(this.headcrest1);
        this.headbase.addChild(this.headR1);
        this.waistL3.addChild(this.boxL1);
        this.trackconnectorR5.addChild(this.wheelR1);
        this.trackconnectorL3.addChild(this.wheelL5);
        this.trackconnectorL4.addChild(this.wheelL2);
        this.waistR1.addChild(this.waistR2);
        this.torsoconnector.addChild(this.trackbase1);
        this.torsoconnector.addChild(this.bodyparts3);
        this.trackconnectorR3.addChild(this.wheelR4);
        this.torsobase.addChild(this.chestplateR1);
        this.lowerlegL5.addChild(this.lowerlegL6);
        this.waist.addChild(this.waistR3);
        this.headtop1.addChild(this.headcrest4);
        this.turret1.addChild(this.turret4);
        this.trackconnectorL3.addChild(this.wheelL3);
        this.shoulderL1.addChild(this.shoulderL8);
        this.lowerarmR3.addChild(this.lowerarmR4);
        this.headtop1.addChild(this.headcrest2);
        this.trackconnectorR2.addChild(this.trackconnectorR3);
        this.trackR1.addChild(this.trackR2);
        this.turret5.addChild(this.turret6);
        this.lowerArmR.addChild(this.lowerarmR2);
        this.turret5.addChild(this.turret7);
        this.lowerlegR11.addChild(this.lowerlegR12);
        this.waist.addChild(this.waistL3);
        this.headtop1.addChild(this.headcrest3);
        this.trackconnectorR1.addChild(this.trackconnectorR2);
        this.upperArmL.addChild(this.upperarmL2);
        this.headL1.addChild(this.headL2);
        this.turret1.addChild(this.turret2);
        this.barrelbase1.addChild(this.barrelbase4);
        this.boxL1.addChild(this.boxL2);
        this.lowerlegL11.addChild(this.lowerlegL12);
        this.shoulderL3.addChild(this.shoulderL6);
        this.headbase.addChild(this.headL1);
        this.lowerarmL4.addChild(this.lowerarmL5);
        this.lowerlegR2.addChild(this.lowerlegR13);
        this.lowerlegR1.addChild(this.lowerlegR2);
        this.trackL5.addChild(this.trackL8);
        this.torsobaseR.addChild(this.upperArmR);
        this.trackconnectorL3.addChild(this.trackconnectorL4);
        this.torsobaseR.addChild(this.shoulderR1);
        this.lowerlegR5.addChild(this.lowerlegR6);
        this.turretbase.addChild(this.turret1);
        this.turretbase.addChild(this.turret5);
        this.trackconnectorR3.addChild(this.wheelR3);
        this.feetL3.addChild(this.feetL4);
        this.trackconnectorL1.addChild(this.trackconnectorL2);
        this.lowerlegR2.addChild(this.lowerlegR10);
        this.crotch1.addChild(this.crotch2);
        this.waist.addChild(this.torsoconnector);
        this.torsobase.addChild(this.chestplateL1);
        this.shoulderL1.addChild(this.shoulderL3);
        this.torsobase.addChild(this.turretconnector);
        this.torsoconnector.addChild(this.trackconnectorR1);
        this.trackR2.addChild(this.trackR3);
        this.trackR7.addChild(this.trackR8);
        this.lowerlegR8.addChild(this.lowerlegR9);
        this.chestplateL1.addChild(this.chestplateL2);
        this.shoulderR4.addChild(this.shoulderR5);
        this.shoulderR6.addChild(this.shoulderR7);
        this.lowerlegR3.addChild(this.lowerlegR4);
        this.boxR1.addChild(this.boxR3);
        this.shoulderL1.addChild(this.shoulderL2);
        this.shoulderR3.addChild(this.shoulderR6);
        this.trackconnectorL2.addChild(this.trackconnectorL3);
        this.lowerlegR2.addChild(this.lowerlegR3);
        this.feetbaseL1.addChild(this.feetL5);
        this.torsoconnector.addChild(this.bodyparts1);
        this.lowerlegL6.addChild(this.lowerlegL7);
        this.feetbaseL1.addChild(this.feetL2);
        this.chestplateL2.addChild(this.chestplateL3);
        this.waist.addChild(this.waistL1);
        this.trackcnnectorL5.addChild(this.wheelL1);
        this.lowerlegL3.addChild(this.lowerlegL4);
        this.headbase.addChild(this.headback1);
        this.lowerlegL2.addChild(this.lowerlegL10);
        this.lowerArmL.addChild(this.lowerarmL2);
        this.turretbase.addChild(this.turret12);
        this.trackL6.addChild(this.trackL7);
        this.torsoconnector.addChild(this.bodyparts4);
        this.barrelbase1.addChild(this.barrelbase2);
        this.lowerlegL4.addChild(this.lowerlegL5);
        this.torsoconnector.addChild(this.trackconnectorL1);
        this.upperLegR.addChild(this.lowerlegR1);
        this.waist.addChild(this.waistR1);
        this.lowerArmR.addChild(this.lowerarmR5);
        this.trackconnectorL3.addChild(this.wheelL4);
        this.trackconnectorL3.addChild(this.trackL1);
        this.waist.addChild(this.crotch1);
        this.torsobase.addChild(this.neck1);
        this.trackL1.addChild(this.trackL2);
        this.lowerlegL2.addChild(this.lowerlegL13);
        this.lowerlegL2.addChild(this.lowerlegL11);
        this.barrelbase1.addChild(this.barrelbase3);
        this.torsoconnector.addChild(this.torsobase);
        this.lowerArmR.addChild(this.fistR);
        this.feetbaseR1.addChild(this.feetR5);
        this.turret4.addChild(this.barrelbase1);
        this.barrel1.addChild(this.barrel2);
        this.lowerArmR.addChild(this.lowerarmR3);
        this.trackR1.addChild(this.trackR5);
        this.lowerlegR2.addChild(this.lowerlegR8);
        this.trackconnectorR3.addChild(this.trackR6);
        this.waistL1.addChild(this.waistL2);
        this.torsoconnector.addChild(this.stomach1);
        this.feetR2.addChild(this.feetR3);
        this.headbase.addChild(this.headtop1);
        this.lowerArmL.addChild(this.lowerarmL4);
        this.barrelbase1.addChild(this.barrelbase5);
        this.chestplateR2.addChild(this.chestplateR3);
        this.shoulderR1.addChild(this.shoulderR2);
        this.shoulderR1.addChild(this.shoulderR8);
        this.headR1.addChild(this.headR2);
        this.trackconnectorR3.addChild(this.trackR1);
        this.upperLegL.addChild(this.upperlegL2);
        this.trackconnectorL3.addChild(this.trackL5);

        this.setInitPose();
    }

    @Override
    public Transformer getTransformer()
    {
        return TransformerManager.PURGE;
    }

    @Override
    public ModelRendererTF getWaist()
    {
        return this.waist;
    }

    @Override
    public void setupOffsets(EntityPlayer player, float progress, float limbSwing, float limbSwingAmount, float ticks, float rotationYaw, float rotationPitch, boolean wearingHead, boolean wearingChest, boolean wearingLegs, boolean wearingFeet)
    {
        ModelOffset offsets = TFModelHelper.getOffsets(player);
        this.headbase.rotationPointX += offsets.headOffsetX;
        this.headbase.rotationPointY += offsets.headOffsetY;
        this.headbase.rotationPointZ += offsets.headOffsetZ;

        if (wearingChest && !wearingHead)
        {
            offsets.headOffsetY = 0.8F;
        }

        if (wearingHead)
        {
            this.faceTarget(this.headbase, 1, rotationYaw, rotationPitch);

            if (!wearingChest)
            {
                this.headbase.rotationPointY += 0.5;
                this.headbase.rotationPointZ -= 0.5;

                if (TFHelper.getTransformerFromArmor(player, EntityEquipmentSlot.CHEST) instanceof TransformerSkystrike)
                {
                    this.headbase.rotationPointY -= 1.5;
                }
            }
        }
    }

    @Override
    public void doActiveAnimations(EntityPlayer player, float progress, float limbSwing, float limbSwingAmount, float ticks, float rotationYaw, float rotationPitch, boolean wearingHead, boolean wearingChest, boolean wearingLegs, boolean wearingFeet)
    {
        this.applyDefaultHoldingAnimation(this.upperArmR, this.upperArmL, this.lowerArmR, this.lowerArmL);
        this.applyDefaultHittingAnimation(this.torsobaseR, this.upperArmL, this.headbase, this.torsobase, this.lowerArmR, this.lowerArmL);

        if (this.isRiding)
        {
            this.upperArmR.rotateAngleX -= this.PI / 5F;
            this.upperArmL.rotateAngleX -= this.PI / 5F;
            this.upperLegR.rotateAngleX -= this.PI * 2F / 5F;
            this.upperLegL.rotateAngleX -= this.PI * 2F / 5F;

            this.upperLegR.rotateAngleY += this.PI / 10F;
            this.upperLegL.rotateAngleY -= this.PI / 10F;
        }

        if (this.rightArmPose == ArmPose.BOW_AND_ARROW || this.leftArmPose == ArmPose.BOW_AND_ARROW)
        {
            this.upperArmR.rotateAngleY += -0.1F + this.headbase.rotateAngleY;
            this.upperArmL.rotateAngleY += 0.1F + this.headbase.rotateAngleY + 0.4F;
            this.upperArmR.rotateAngleX += -(this.PI / 2F) + this.headbase.rotateAngleX;
            this.upperArmL.rotateAngleX += -(this.PI / 2F) + this.headbase.rotateAngleX;
            this.upperArmR.rotateAngleZ += MathHelper.cos(ticks * 0.09F) * 0.05F + 0.05F;
            this.upperArmL.rotateAngleZ -= MathHelper.cos(ticks * 0.09F) * 0.05F + 0.05F;
            this.upperArmR.rotateAngleX += MathHelper.sin(ticks * 0.067F) * 0.05F;
            this.upperArmL.rotateAngleX -= MathHelper.sin(ticks * 0.067F) * 0.05F;
        }

        //TODO: Purge's Katana
        /*ItemStack heldRight = player.getHeldItem(player.getPrimaryHand() == EnumHandSide.RIGHT ? EnumHand.MAIN_HAND : EnumHand.OFF_HAND);
        ItemStack heldLeft = player.getHeldItem(player.getPrimaryHand() == EnumHandSide.LEFT ? EnumHand.MAIN_HAND : EnumHand.OFF_HAND);

        this.trackconnectorR1.showModel = !(!heldRight.isEmpty() && heldRight.getItem() == TFItems.PURGES_KATANA);
        this.trackconnectorL1.showModel = !(!heldLeft.isEmpty() && heldLeft.getItem() == TFItems.PURGES_KATANA);*/
    }

    @Override
    public void doWalkingAnimations(EntityPlayer player, float progress, float limbSwing, float limbSwingAmount, float ticks, float rotationYaw, float rotationPitch, boolean wearingHead, boolean wearingChest, boolean wearingLegs, boolean wearingFeet)
    {
        this.upperArmR.rotateAngleZ += 0.05F;
        this.upperArmL.rotateAngleZ -= 0.05F;
        this.lowerArmR.rotateAngleX -= 0.1F;
        this.lowerArmL.rotateAngleX -= 0.1F;
        this.upperLegR.rotateAngleY += 0.2;
        this.upperLegL.rotateAngleY -= 0.2;
        this.upperLegR.rotateAngleX -= 0.2;
        this.upperLegL.rotateAngleX -= 0.2;
        this.lowerlegR1.rotateAngleX += 0.15;
        this.lowerlegL1.rotateAngleX += 0.15;
        this.waist.rotateAngleX += 0.1F;
        this.skirtR1.rotateAngleZ += 0.1F;
        this.skirtL1.rotateAngleZ -= 0.1F;

        ModelRendererTF armR = this.torsobaseR;
        ModelRendererTF armL = this.torsobaseL;

        this.bob(this.waist, 1F * this.globalSpeed, 1.7F * this.globalDegree, false, limbSwing, limbSwingAmount);
        this.waist.rotationPointY += 1.2 * limbSwingAmount;
        this.walk(this.waist, 1F * this.globalSpeed, 0.05F * this.globalDegree, false, 1, 0.15F * limbSwingAmount * this.backwardInverter, limbSwing, limbSwingAmount);
        this.walk(this.torsobase, 1F * this.globalSpeed, 0.05F * this.globalDegree, false, 1, 0.15F * limbSwingAmount * this.backwardInverter, limbSwing, limbSwingAmount);
        this.swing(this.torsobase, 0.5F * this.globalSpeed, 0.4F * this.globalDegree, true, 0, 0, limbSwing, limbSwingAmount);
        this.swing(this.waist, 0.5F * this.globalSpeed, 0.2F * this.globalDegree, false, 0, 0, limbSwing, limbSwingAmount);
        this.swing(this.headbase, 0.5F * this.globalSpeed, 0.2F * this.globalDegree, true, 0, 0, limbSwing, limbSwingAmount);
        this.walk(this.headbase, 1F * this.globalSpeed, -0.1F * this.globalDegree, false, 1F, -0.3F * limbSwingAmount * this.backwardInverter, limbSwing, limbSwingAmount);

        this.swing(this.headbase, 0.5F * this.globalSpeed, 0.4F * this.globalDegree, false, 0, 0, limbSwing, limbSwingAmount);
        this.headbase.rotationPointX += 0.6 * this.globalDegree * limbSwingAmount * Math.cos(limbSwing * 0.5F * this.globalSpeed);

        this.swing(this.upperLegR, 0.5F * this.globalSpeed, 0F * this.globalDegree, false, 0, -0.15F, limbSwing, limbSwingAmount);
        this.swing(this.upperLegL, 0.5F * this.globalSpeed, 0F * this.globalDegree, false, 0, 0.15F, limbSwing, limbSwingAmount);
        this.walk(this.upperLegR, 0.5F * this.globalSpeed, 1.2F * this.globalDegree, false, 0, 0, limbSwing, limbSwingAmount);
        this.walk(this.upperLegL, 0.5F * this.globalSpeed, 1.2F * this.globalDegree, true, 0, 0, limbSwing, limbSwingAmount);
        this.walk(this.lowerlegR1, 0.5F * this.globalSpeed, 1.2F * this.globalDegree, false, -2.2F * this.backwardInverter, 0.6F, limbSwing, limbSwingAmount);
        this.walk(this.lowerlegL1, 0.5F * this.globalSpeed, 1.2F * this.globalDegree, true, -2.2F * this.backwardInverter, 0.6F, limbSwing, limbSwingAmount);
        this.walk(armR, 0.5F * this.globalSpeed, 0.5F * this.globalDegree, true, 0F, -0.3F * limbSwingAmount * this.backwardInverter, limbSwing, limbSwingAmount);
        this.walk(armL, 0.5F * this.globalSpeed, 0.5F * this.globalDegree, false, 0F, -0.3F * limbSwingAmount * this.backwardInverter, limbSwing, limbSwingAmount);
        this.walk(this.lowerArmR, 0.5F * this.globalSpeed, 0.5F * this.globalDegree, true, -1F * this.backwardInverter, -0.5F * limbSwingAmount, limbSwing, limbSwingAmount);
        this.walk(this.lowerArmL, 0.5F * this.globalSpeed, 0.5F * this.globalDegree, false, -1F * this.backwardInverter, -0.5F * limbSwingAmount, limbSwing, limbSwingAmount);

        this.flap(this.skirtR1, 1F * this.globalSpeed, 0.2F * this.globalDegree, false, -1, 0, limbSwing, limbSwingAmount);
        this.flap(this.skirtL1, 1F * this.globalSpeed, 0.2F * this.globalDegree, true, -1, 0, limbSwing, limbSwingAmount);
        this.walk(this.barrelbase1, 1F * this.globalSpeed, -0.3F * this.globalDegree, false, -1, 0, limbSwing, limbSwingAmount);

        if (player.isSneaking())
        {
            this.waist.rotationPointY += 1.8F;
            this.waist.rotateAngleX -= 0.1F;
            this.torsoconnector.rotateAngleX += 0.5;
            this.headbase.rotateAngleX -= 0.5;
            this.upperLegR.rotateAngleX -= 0.7;
            this.upperLegL.rotateAngleX -= 0.7;
            this.upperLegR.rotateAngleY += 0.2;
            this.upperLegL.rotateAngleY -= 0.2;
            this.lowerlegR1.rotateAngleX += 1.1;
            this.lowerlegL1.rotateAngleX += 1.1;
            this.feetbaseR1.rotateAngleX -= 0.3;
            this.feetbaseL1.rotateAngleX -= 0.3;
            this.upperArmR.rotateAngleX -= 0.5;
            this.upperArmL.rotateAngleX -= 0.5;
            this.upperArmR.rotateAngleZ += 0.5;
            this.upperArmL.rotateAngleZ -= 0.5;
            this.lowerArmR.rotateAngleZ -= 0.5;
            this.lowerArmL.rotateAngleZ += 0.5;
        }
    }

    @Override
    public void doIdleAnimations(EntityPlayer player, float progress, float limbSwing, float limbSwingAmount, float ticks, float rotationYaw, float rotationPitch, boolean wearingHead, boolean wearingChest, boolean wearingLegs, boolean wearingFeet)
    {
        this.walk(this.torsoconnector, 0.08F, 0.1F, true, 1, 0, ticks, 1F);
        this.walk(this.torsobase, 0.08F, 0.15F, false, 1, 0, ticks, 1F);
        this.flap(this.trackconnectorR3, 0.08F, 0.1F, false, 1, 0, ticks, 1F);
        this.flap(this.trackconnectorL3, 0.08F, 0.1F, true, 1, 0, ticks, 1F);
        this.walk(this.headbase, 0.08F, 0.05F, true, 1, 0, ticks, 1F);
        this.walk(this.upperArmR, 0.08F, 0.05F, true, 1, 0, ticks, 1F);
        this.walk(this.upperArmL, 0.08F, 0.05F, true, 1, 0, ticks, 1F);

        this.flap(this.upperArmR, 0.08F, 0.05F, true, 1, 0, ticks, 1F);
        this.flap(this.upperArmL, 0.08F, 0.05F, false, 1, 0, ticks, 1F);
        this.walk(this.lowerArmR, 0.08F, 0.1F, true, 1, 0, ticks, 1F);
        this.walk(this.lowerArmL, 0.08F, 0.1F, true, 1, 0, ticks, 1F);
    }

    @Override
    public void doFallingAnimations(EntityPlayer player, float progress, float limbSwing, float limbSwingAmount, float ticks, float rotationYaw, float rotationPitch, boolean wearingHead, boolean wearingChest, boolean wearingLegs, boolean wearingFeet)
    {
        double motionY = TFRenderHelper.getMotionY(player);

        float upwardPose = (float) (1 / (1 + Math.exp(-20 * (motionY + 0.2))));
        float downwardPose = (float) (1 / (1 + Math.exp(10 * (motionY + 0.2))));

        this.waist.rotateAngleX += 0.2 * limbSwingAmount * this.backwardInverter;

        this.stomach1.rotateAngleX += 0.2 * upwardPose;
        this.chestplate1.rotateAngleX -= 0.4 * upwardPose;
        this.headbase.rotateAngleX += 0.6 * upwardPose;

        this.upperArmR.rotateAngleX += 0.1 * upwardPose;
        this.upperArmL.rotateAngleX += 0.1 * upwardPose;
        this.upperArmR.rotateAngleZ -= 0.1 * upwardPose;
        this.upperArmL.rotateAngleZ += 0.1 * upwardPose;
        this.lowerArmR.rotateAngleX += 0.2 * upwardPose;
        this.lowerArmL.rotateAngleX += 0.2 * upwardPose;

        this.upperLegR.rotateAngleX += 0.2 * upwardPose;
        this.upperLegL.rotateAngleX -= 1 * upwardPose;
        this.lowerlegR1.rotateAngleX += 0.3 * upwardPose;
        this.lowerlegL1.rotateAngleX += 1.5 * upwardPose;

        this.walk(this.upperLegR, 0.5F * this.globalSpeed, 0.2F * this.globalDegree * downwardPose, false, 0, 0, limbSwing, limbSwingAmount);
        this.walk(this.upperLegL, 0.5F * this.globalSpeed, 0.2F * this.globalDegree * downwardPose, true, 0, 0, limbSwing, limbSwingAmount);
        this.walk(this.lowerlegR1, 0.5F * this.globalSpeed, 0.2F * this.globalDegree * downwardPose, false, -2.2F * this.backwardInverter, 0F, limbSwing, limbSwingAmount);
        this.walk(this.lowerlegL1, 0.5F * this.globalSpeed, 0.2F * this.globalDegree * downwardPose, true, -2.2F * this.backwardInverter, 0F, limbSwing, limbSwingAmount);

        this.waist.rotateAngleX -= 0.2 * downwardPose;
        this.stomach1.rotateAngleX += 0.3 * downwardPose;
        this.chestplate1.rotateAngleX += 0.3 * downwardPose;
        this.headbase.rotateAngleX += 0.3 * downwardPose;
        this.upperLegR.rotateAngleX -= 1.2 * downwardPose;
        this.upperLegL.rotateAngleX -= 0.2 * downwardPose;
        this.lowerlegR1.rotateAngleX += 2 * downwardPose;
        this.lowerlegL1.rotateAngleX += 0.5 * downwardPose;
        this.upperArmR.rotateAngleZ += 1 * downwardPose;
        this.upperArmL.rotateAngleZ -= 1 * downwardPose;
        this.lowerArmR.rotateAngleX -= 1 * downwardPose;
        this.lowerArmL.rotateAngleX -= 1 * downwardPose;
    }

    @Override
    public void doPartialAnimations(EntityPlayer player, float progress, float limbSwing, float limbSwingAmount, float ticks, float rotationYaw, float rotationPitch, boolean wearingHead, boolean wearingChest, boolean wearingLegs, boolean wearingFeet)
    {
        this.upperArmL.rotateAngleX += MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount;
        this.upperArmR.rotateAngleX += MathHelper.cos(limbSwing * 0.6662F + this.PI) * 1.4F * limbSwingAmount;

        this.upperLegR.rotateAngleX += MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount;
        this.upperLegL.rotateAngleX += MathHelper.cos(limbSwing * 0.6662F + this.PI) * 1.4F * limbSwingAmount;

        if (this.isSneak)
        {
            this.waist.rotateAngleX += 0.4F;
            this.waist.rotationPointZ += 4F;
            this.waist.rotationPointY -= 2F;
            this.upperArmR.rotateAngleX -= 0.1F;
            this.upperArmL.rotateAngleX -= 0.1F;
            this.upperLegR.rotateAngleX -= 0.4F;
            this.upperLegL.rotateAngleX -= 0.4F;

            if (wearingChest)
            {
                this.headbase.rotateAngleX -= 0.4F;
            }
        }
    }

    @Override
    public void doTransformationAnimations(EntityPlayer player, float progress, float limbSwing, float limbSwingAmount, float ticks, float rotationYaw, float rotationPitch, boolean wearingHead, boolean wearingChest, boolean wearingLegs, boolean wearingFeet)
    {
        ModelPurgeVehicle vehicle = (ModelPurgeVehicle) this.getTransformerModel().getVehicleModel();

        this.rotateTo(this.waist, vehicle.vehiclebase, progress);
        this.rotateTo(this.turretbase, vehicle.vehicleturretbase_rotatehere, progress);
        this.rotateTo(this.turretconnector, vehicle.vehicle31, progress);
        this.rotateTo(this.shoulderL4, vehicle.vehicle11, progress);
        this.rotateTo(this.shoulderR4, vehicle.vehicle26, progress);
        this.rotateTo(this.lowerlegL1, vehicle.vehicle88, progress);
        this.rotateTo(this.lowerlegR1, vehicle.vehicle81, progress);
        this.rotateTo(this.lowerlegR2, vehicle.vehicle82, progress);
        this.rotateTo(this.lowerlegL2, vehicle.vehicle89, progress);
        this.rotateTo(this.lowerlegR3, vehicle.vehicle83, progress);
        this.rotateTo(this.lowerlegL3, vehicle.vehicle90, progress);
        this.rotateTo(this.chestplateL1, vehicle.vehicle33, progress);
        this.rotateTo(this.chestplateR1, vehicle.vehicle37, progress);
        this.rotateTo(this.skirtL1, vehicle.vehicle95, progress);
        this.rotateTo(this.skirtR1, vehicle.vehicle97, progress);
        this.rotateTo(this.barrel1, vehicle.vehiclebarrel1, progress);
        this.rotateTo(this.trackconnectorR1, vehicle.vehicle42, progress);
        this.rotateTo(this.trackconnectorR2, vehicle.vehicle43, progress);
        this.rotateTo(this.trackconnectorR3, vehicle.vehicle44, progress);
        this.rotateTo(this.trackconnectorL1, vehicle.vehicle61, progress);
        this.rotateTo(this.trackconnectorL2, vehicle.vehicle62, progress);
        this.rotateTo(this.trackconnectorL3, vehicle.vehicle63, progress);
        this.rotateTo(this.torsoconnector, vehicle.vehicle1, progress);
        this.rotateTo(this.torsobase, vehicle.vehicle2, progress);
        this.rotateTo(this.upperArmL, vehicle.vehicle3, progress);
        this.rotateTo(this.upperArmR, vehicle.vehicle17, progress);
        this.rotateTo(this.lowerArmL, vehicle.vehicle4, progress);
        this.rotateTo(this.lowerArmR, vehicle.vehicle18, progress);
        this.rotateTo(this.lowerarmL4, vehicle.vehicle5, progress);
        this.rotateTo(this.lowerarmR3, vehicle.vehicle19, progress);
        this.rotateTo(this.upperLegR, vehicle.vehicle80, progress);
        this.rotateTo(this.upperLegL, vehicle.vehicle87, progress);
        this.rotateTo(this.shoulderL1, vehicle.vehicle8, progress);
        this.rotateTo(this.shoulderR1, vehicle.vehicle23, progress);
        this.rotateTo(this.shoulderL6, vehicle.vehicle13, progress);
        this.rotateTo(this.shoulderR6, vehicle.vehicle28, progress);
        this.rotateTo(this.shoulderL2, vehicle.vehicle9, progress);
        this.rotateTo(this.shoulderR2, vehicle.vehicle24, progress);
        this.rotateTo(this.shoulderR3, vehicle.vehicle25, progress);
        this.rotateTo(this.shoulderL3, vehicle.vehicle10, progress);
        this.rotateTo(this.boxL1, vehicle.vehicle99, progress);
        this.rotateTo(this.boxR1, vehicle.vehicle103, progress);
        this.rotateTo(this.boxL2, vehicle.vehicle100, progress);
        this.rotateTo(this.boxR2, vehicle.vehicle104, progress);
        this.rotateTo(this.boxL3, vehicle.vehicle101, progress);
        this.rotateTo(this.boxR3, vehicle.vehicle105, progress);
        this.rotateTo(this.waistL3, vehicle.vehicle98, progress);
        this.rotateTo(this.waistR3, vehicle.vehicle102, progress);
        this.rotateTo(this.lowerlegR13, vehicle.vehicle86, progress);
        this.rotateTo(this.lowerlegL13, vehicle.vehicle93, progress);
        this.rotateTo(this.lowerlegR11, vehicle.vehicle84, progress);
        this.rotateTo(this.lowerlegL11, vehicle.vehicle91, progress);
        this.rotateTo(this.lowerlegR12, vehicle.vehicle85, progress);
        this.rotateTo(this.lowerlegL12, vehicle.vehicle92, progress);
        this.rotateTo(this.trackR6, vehicle.vehicle58, progress);
        this.rotateTo(this.trackR7, vehicle.vehicle59, progress);
        this.rotateTo(this.trackR8, vehicle.vehicle60, progress);
        this.rotateTo(this.trackR4, vehicle.vehicle56, progress);
        this.rotateTo(this.trackR3, vehicle.vehicle55, progress);
        this.rotateTo(this.trackR2, vehicle.vehicle54, progress);
        this.rotateTo(this.trackR1, vehicle.vehicle53, progress);
        this.rotateTo(this.trackR5, vehicle.vehicle57, progress);
        this.rotateTo(this.wheelR5, vehicle.vehicle52, progress);
        this.rotateTo(this.wheelR4, vehicle.vehicle51, progress);
        this.rotateTo(this.wheelR3, vehicle.vehicle50, progress);
        this.rotateTo(this.wheelR2, vehicle.vehicle49, progress);
        this.rotateTo(this.wheelR1, vehicle.vehicle47, progress);
        this.rotateTo(this.trackL6, vehicle.vehicle77, progress);
        this.rotateTo(this.trackL7, vehicle.vehicle78, progress);
        this.rotateTo(this.trackL8, vehicle.vehicle79, progress);
        this.rotateTo(this.trackL4, vehicle.vehicle75, progress);
        this.rotateTo(this.trackL3, vehicle.vehicle74, progress);
        this.rotateTo(this.trackL2, vehicle.vehicle73, progress);
        this.rotateTo(this.trackL1, vehicle.vehicle72, progress);
        this.rotateTo(this.trackL5, vehicle.vehicle76, progress);
        this.rotateTo(this.wheelL5, vehicle.vehicle71, progress);
        this.rotateTo(this.wheelL4, vehicle.vehicle70, progress);
        this.rotateTo(this.wheelL3, vehicle.vehicle69, progress);
        this.rotateTo(this.wheelL2, vehicle.vehicle68, progress);
        this.rotateTo(this.wheelL1, vehicle.vehicle66, progress);

        this.feetbaseL1.rotationPointY -= progress * 0.25F;
        this.feetbaseR1.rotationPointY -= progress * 0.25F;
        this.feetbaseL1.rotationPointX -= progress * 0.05F;
        this.feetbaseR1.rotationPointX += progress * 0.05F;
        this.headbase.rotationPointY += progress * 0.15F;
        this.headbase.rotationPointZ += progress * 0.3F;
    }

    @Override
    public void renderArmorPiece(EntityEquipmentSlot armorPiece)
    {
        this.setToInitPose();

        if (armorPiece == EntityEquipmentSlot.HEAD)
        {
            GlStateManager.translate(0, 0.075F, -0.1F);
            this.headbase.render(0.0625F);
        }
        else if (armorPiece == EntityEquipmentSlot.CHEST)
        {
            this.upperLegL.showModel = false;
            this.upperLegR.showModel = false;
            this.headbase.showModel = false;
            this.waist.render(0.0625F);
            this.upperLegL.showModel = true;
            this.upperLegR.showModel = true;
            this.headbase.showModel = true;
        }
        else if (armorPiece ==  EntityEquipmentSlot.LEGS)
        {
            GlStateManager.translate(0, 0.05F, 0);
            this.feetbaseL1.showModel = false;
            this.feetbaseR1.showModel = false;
            this.upperLegL.render(0.0625F);
            this.upperLegR.render(0.0625F);
            this.feetbaseL1.showModel = true;
            this.feetbaseR1.showModel = true;
        }
        else if (armorPiece ==  EntityEquipmentSlot.FEET)
        {
            GlStateManager.translate(0, 0, -0.0625F);
            GlStateManager.rotate(5, 1, 0, 0);
            this.feetbaseL1.rotationPointX -= 3;
            this.feetbaseR1.rotationPointX += 3;
            this.feetbaseL1.rotateAngleX += 0.2F;
            this.feetbaseL1.rotateAngleY += 0.2F;
            this.feetbaseR1.rotateAngleX += 0.2F;
            this.feetbaseR1.rotateAngleY -= 0.2F;
            this.feetbaseL1.render(0.0625F);
            this.feetbaseR1.render(0.0625F);
        }
    }
}
